{"version":3,"sources":["assets/Andy.png","assets/Angela.png","assets/Dwight.png","assets/Jim.png","assets/Kelly.png","assets/Michael.png","assets/Pam.png","assets/Stanley.png","assets/Creed.png","assets/Kevin.png","assets/Meredith.png","assets/Oscar.png","assets/Phyllis.png","assets/Ryan.png","assets/Toby.png","reducers/imageReducer.js","reducers/cardReducer.js","reducers/index.js","reducers/quoteReducer.js","store.js","actions/index.js","components/QuoteCard.js","components/LoadingScreen.js","components/Arrow.js","components/CardMenu.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","images","key","combineReducers","quotes","state","action","hasOwnProperty","payload","type","console","log","Object","assign","data","cards","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","fetchQuotes","dispatch","getImages","Andy","Angela","Dwight","Jim","Kelly","Michael","Pam","Stanley","Creed","Kevin","Meredith","Oscar","Phyllis","Ryan","Toby","onSelect","QuoteCard","props","current","newQuote","bind","this","className","dangerouslySetInnerHTML","__html","author","EmailShareButton","subject","body","stripHtmlTags","TwitterShareButton","title","via","hashtags","FacebookShareButton","url","quote","hashtag","id","onClick","text","replace","Math","floor","random","length","setState","prevState","Component","Loading","Arrow","ArrowLeft","ArrowRight","CardMenu","menuStyle","display","margin","position","top","transform","width","getCards","arrowLeft","arrowRight","selected","scrollToSelected","wheel","map","name","fileName","substr","lastIndexOf","indexOf","extractName","onDragStart","e","preventDefault","isFlipped","infinite","src","alt","connect","bindActionCreators","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ef7e2695.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Andy.b16d7003.png\";","module.exports = __webpack_public_path__ + \"static/media/Angela.3eb0b2b6.png\";","module.exports = __webpack_public_path__ + \"static/media/Dwight.25c86748.png\";","module.exports = __webpack_public_path__ + \"static/media/Jim.f2533969.png\";","module.exports = __webpack_public_path__ + \"static/media/Kelly.f2d9b099.png\";","module.exports = __webpack_public_path__ + \"static/media/Michael.564d0425.png\";","module.exports = __webpack_public_path__ + \"static/media/Pam.fa8ad773.png\";","module.exports = __webpack_public_path__ + \"static/media/Stanley.595788b9.png\";","module.exports = __webpack_public_path__ + \"static/media/Creed.ee51db89.png\";","module.exports = __webpack_public_path__ + \"static/media/Kevin.3e71b695.png\";","module.exports = __webpack_public_path__ + \"static/media/Meredith.36ce83bd.png\";","module.exports = __webpack_public_path__ + \"static/media/Oscar.0f253e0b.png\";","module.exports = __webpack_public_path__ + \"static/media/Phyllis.038dcc46.png\";","module.exports = __webpack_public_path__ + \"static/media/Ryan.2f17ef77.png\";","module.exports = __webpack_public_path__ + \"static/media/Toby.7723fcc2.png\";","\r\nconst initialState = {\r\n    images:[]\r\n}\r\n\r\n  \r\nexport default function (state = initialState, action){\r\n\r\n    if (!action.hasOwnProperty('payload') || !action){\r\n        action = {payload:[]};\r\n    } \r\n    switch (action.type){\r\n        case 'GET_IMAGES':\r\n            return {\r\n                data: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nconst initialState = {\r\n    key: \"\",\r\n}\r\n\r\n  \r\nexport default function (state = initialState, action){\r\n    switch (action.type){\r\n        case 'SELECT':\r\n            return {\r\n                key: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import quoteReducer from './quoteReducer';\r\nimport imageReducer from './imageReducer';\r\nimport cardReducer from './cardReducer';\r\nimport { combineReducers } from 'redux';\r\n\r\nexport default combineReducers({\r\n    quotes: quoteReducer,\r\n    images: imageReducer,\r\n    cards: cardReducer\r\n  });\r\n  ","\r\nconst initialState = {\r\n    quotes: {}\r\n};\r\n\r\n  \r\nexport default function (state = {}, action){\r\n\r\n    if (!action.hasOwnProperty('payload') || !action){\r\n        action = {payload:{}};\r\n    } \r\n    switch (action.type){\r\n        case 'FETCH_QUOTES':\r\n            console.log();\r\n            return Object.assign({}, action.payload);\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import Andy from '../assets/Andy.png';\r\nimport Angela from '../assets/Angela.png';\r\nimport Dwight from '../assets/Dwight.png';\r\nimport Jim from '../assets/Jim.png';\r\nimport Kelly from '../assets/Kelly.png';\r\nimport Michael from '../assets/Michael.png';\r\nimport Pam from '../assets/Pam.png';\r\nimport Stanley from '../assets/Stanley.png';\r\n\r\nimport Creed from '../assets/Creed.png';\r\nimport Kevin from '../assets/Kevin.png';\r\nimport Meredith from '../assets/Meredith.png';\r\nimport Oscar from '../assets/Oscar.png';\r\nimport Phyllis from '../assets/Phyllis.png';\r\nimport Ryan from '../assets/Ryan.png';\r\nimport Toby from '../assets/Toby.png';\r\nimport quotes from '../assets/quotes.json';\r\n\r\nexport const fetchQuotes = (...urls) => dispatch => {\r\n    dispatch({type: 'FETCH_QUOTES', payload:{quotes}});\r\n};\r\n\r\n\r\nexport const getImages = () => dispatch => {\r\n    let images = [Andy, Angela, Dwight, Jim, Kelly, Michael, Pam, Stanley, Creed, Kevin, Meredith, Oscar, Phyllis, Ryan, Toby];\r\n    dispatch({type: 'GET_IMAGES', payload: images});\r\n}\r\n\r\nexport const onSelect = (key) => dispatch => {\r\n    dispatch({type: 'SELECT', payload: key});\r\n}","import React, {Component} from 'react';\r\nimport {FacebookShareButton, EmailShareButton, TwitterShareButton} from 'react-share';\r\nimport '../stylesheets/loadingScreen.css';\r\n\r\n\r\nexport default class QuoteCard extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            quotes: this.props.quotes,\r\n            current: \"\"\r\n        };\r\n        this.newQuote = this.newQuote.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.newQuote();\r\n    }\r\n\r\n    render(){\r\n        return ( \r\n        <div className={this.props.className}>\r\n            <div className='quoteBox'>\r\n                <div className ='quote' > \r\n                    <q dangerouslySetInnerHTML={{ __html: this.state.current }}></q>\r\n                    <p className = 'author'>\r\n                    -{this.props.author}\r\n                    </p>\r\n                </div>\r\n                <div className=\"buttons \">\r\n                    <div className = \"socialMedia\">\r\n                        <EmailShareButton\r\n                            subject = 'The Office Quotes'\r\n                            body = {this.stripHtmlTags(this.state.current) + this.props.author}>\r\n                            <button className=\"button fa fa-envelope\"></button>\r\n                        </EmailShareButton>\r\n                        <TwitterShareButton\r\n                            title = 'The Office Quotes'\r\n                            via = 'http://localhost:3000/'\r\n                            hashtags = '#TheOffice'>\r\n                            <button className=\"button fa fa-twitter\"></button>\r\n                        </TwitterShareButton>\r\n                        <FacebookShareButton \r\n                            url='http://localhost:3000/'\r\n                            quote={this.stripHtmlTags(this.state.current) + this.props.author}\r\n                            hashtag=\"#TheOffice\">\r\n                            <button className=\"button fa fa-facebook\"></button>\r\n                        </FacebookShareButton>\r\n                    </div>\r\n\r\n                    <button\r\n                    className=\"button newQuote\"\r\n                    id=\"new-quote\"\r\n                    onClick={this.newQuote}\r\n                    >\r\n                    NEW QUOTE\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div> );\r\n    }\r\n\r\n    stripHtmlTags(text){\r\n        let plainText = text.replace(/<(.|\\n)*?>/g, '');\r\n        return plainText;\r\n    }\r\n    newQuote(){\r\n        let newQuote = this.state.quotes[Math.floor(Math.random() * this.state.quotes.length)];\r\n        while (newQuote === this.state.current){\r\n            newQuote = this.state.quotes[Math.floor(Math.random() * this.state.quotes.length)];\r\n        }\r\n        this.setState(prevState => ({\r\n            current: newQuote\r\n        }));\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport '../stylesheets/loadingScreen.css';\r\n\r\nexport default class Loading extends Component {\r\n    render(){\r\n        return (\r\n            <div className=\"loading-container\">\r\n                <div className=\"loader-dzg\" />\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport '../stylesheets/style.css';\r\n\r\nfunction Arrow({ text, className }) {\r\n    return (\r\n      <div\r\n        className={className}\r\n      >{text}</div>\r\n    );\r\n};\r\nexport const ArrowLeft = Arrow({ text: '<', className: 'arrow-prev' });\r\nexport const ArrowRight = Arrow({ text: '>', className: 'arrow-next' });\r\n","import React, {Component} from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport '../stylesheets/style.css';\r\nimport { fetchQuotes, getImages, onSelect} from '../actions/index';\r\nimport QuoteCard from './QuoteCard';\r\nimport ScrollMenu from 'react-horizontal-scrolling-menu';\r\nimport LoadingScreen from './LoadingScreen';\r\nimport ReactCardFlip from 'react-card-flip';\r\nimport {ArrowLeft, ArrowRight} from './Arrow';\r\n\r\nexport class CardMenu extends Component {\r\n    \r\n    render(){\r\n        if (this.props.quotes && this.props.images){\r\n            return (\r\n            <div id='menu'>\r\n                \r\n                <ScrollMenu\r\n                    menuStyle={{\r\n                        display: 'flex',\r\n                        'flex-direction': 'row',\r\n                        margin: '0',\r\n                        position: 'absolute',\r\n                        top: '50%',\r\n                        '-ms-transform': 'translateY(-50%)',\r\n                        transform: 'translateY(-50%)',\r\n                        width: '100%',\r\n                        'white-space': 'nowrap'\r\n                    }}\r\n                    data={this.getCards()}\r\n                    arrowLeft={ArrowLeft}\r\n                    arrowRight={ArrowRight}\r\n                    selected={this.props.selected}\r\n                    onSelect={this.props.onSelect}\r\n                    scrollToSelected={true}\r\n                    wheel = {false}/>\r\n            </div>);\r\n        } else {\r\n            return <LoadingScreen />;\r\n        }\r\n    }\r\n/*\r\n   render(){\r\n    if (this.props.quotes && this.props.images){\r\n        return (\r\n        <div id='menu'>\r\n            {this.getCards()}\r\n        </div>);\r\n    } else {\r\n        return <LoadingScreen />;\r\n    }\r\n}\r\n    */\r\n    getCards(){\r\n        return (\r\n        this.props.images.map(url => {\r\n            let name = extractName(url);\r\n            return (  \r\n            <div key = {name} onDragStart={(e)=> e.preventDefault()} className='card'>\r\n                <ReactCardFlip isFlipped = {this.props.selected === name} infinite = {true}>\r\n                    <div key='front'>\r\n                        <img src = {url} alt = {name} className='front'/>\r\n                    </div>\r\n                    <div key='back'>\r\n                        <QuoteCard quotes = {this.props.quotes[name]} className='back' author={name}/>\r\n                    </div>\r\n                </ReactCardFlip>\r\n            </div>)})\r\n        );\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.fetchQuotes();\r\n        this.props.getImages();\r\n    }\r\n}\r\n\r\nfunction extractName(url){\r\n    let fileName = url.substr(url.lastIndexOf('/') + 1);\r\n    let name = fileName.substr(0, fileName.indexOf('.'));\r\n    return name;\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    quotes:         state.quotes.quotes,\r\n    images:         state.images.data,\r\n    selected:       state.cards.key\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => \r\n    bindActionCreators(\r\n        {\r\n            fetchQuotes,\r\n            getImages,\r\n            onSelect\r\n        },\r\n        dispatch\r\n    );\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardMenu);","import React, {Component} from 'react';\r\nimport {Provider} from 'react-redux';\r\nimport store from '../store';\r\nimport CardMenu from './CardMenu';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <CardMenu />\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}
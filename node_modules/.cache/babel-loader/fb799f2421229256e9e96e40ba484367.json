{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Elija\\\\Projects\\\\quote-generator\\\\random-quote-generator\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\Elija\\\\Projects\\\\quote-generator\\\\random-quote-generator\\\\src\\\\components\\\\CharacterCard.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactCardFlip from 'react-card-flip';\nimport '../stylesheets/style.css';\nexport default class CharacterCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFlipped: false,\n      isHovered: false,\n      url: props.image,\n      name: props.name,\n      quotes: props.quotes,\n      self: null\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleHover = this.handleHover.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      onClick: this.handleClick,\n      style: _objectSpread({}, this.getHoverStyle(this.state.isHovered), {}, this.getFlipStyle(this.state.isFlipped, this.state.self)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, this.getCard(this.state.isFlipped, this.state.name, this.state.url, this.state.quote));\n  }\n\n  componentDidMount() {\n    this.setState(prevState => ({\n      self: ReactDOM.findDOMNode(this).getBoundingClientRect(),\n      quote: prevState.quotes[Math.floor(Math.random() * prevState.quotes.length)]\n    }));\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    this.setState(prevState => ({\n      isFlipped: !prevState.isFlipped,\n      isHovered: !prevState.isHovered\n    }));\n  }\n\n  handleHover() {\n    this.setState(prevState => ({\n      isHovered: !prevState.isHovered\n    }));\n  }\n\n  getHoverStyle(isHovered) {\n    if (isHovered) {\n      return {\n        transition: 'transform .2s',\n        transform: 'scale(1.2)',\n        zIndex: '1'\n      };\n    } else {\n      return {\n        transition: 'transform .2s',\n        transform: 'scale(1)'\n      };\n    }\n  }\n\n  getFlipStyle(isFlipped, self) {\n    if (isFlipped) {\n      return {\n        zIndex: '1',\n        position: 'absolute',\n        transform: `translateX(calc(60vw - (${self.x}))) translateY(calc(50vh - (${self.y}))) scale(1)`\n      };\n    } else {\n      return {};\n    }\n  }\n\n  getCard(isFlipped, alt, src, quote) {\n    return React.createElement(ReactCardFlip, {\n      isFlipped: isFlipped,\n      flipDirection: \"horizontal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.getFrontCard(alt, src), this.getBackCard(quote));\n  }\n\n  getFrontCard(alt, src) {\n    return React.createElement(\"div\", {\n      key: \"front\",\n      onMouseEnter: this.handleHover,\n      onMouseLeave: this.handleHover,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: alt,\n      src: src,\n      id: \"characterImage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }));\n  }\n\n  getBackCard(quote) {\n    return React.createElement(\"div\", {\n      id: \"back\",\n      key: \"back\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Elija/Projects/quote-generator/random-quote-generator/src/components/CharacterCard.js"],"names":["React","Component","ReactDOM","ReactCardFlip","CharacterCard","constructor","props","state","isFlipped","isHovered","url","image","name","quotes","self","handleClick","bind","handleHover","render","getHoverStyle","getFlipStyle","getCard","quote","componentDidMount","setState","prevState","findDOMNode","getBoundingClientRect","Math","floor","random","length","e","preventDefault","transition","transform","zIndex","position","x","y","alt","src","getFrontCard","getBackCard"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactCardFlip from 'react-card-flip';\r\nimport '../stylesheets/style.css';\r\n\r\nexport default class CharacterCard extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isFlipped: false,\r\n            isHovered: false,\r\n            url: props.image,\r\n            name: props.name,\r\n            quotes: props.quotes,\r\n            self: null\r\n        };\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleHover = this.handleHover.bind(this);\r\n    }\r\n\r\n    render(){    \r\n        return (\r\n            <div onClick = {this.handleClick} style={{...this.getHoverStyle(this.state.isHovered), ...this.getFlipStyle(this.state.isFlipped, this.state.self)}}>\r\n                {this.getCard(this.state.isFlipped, this.state.name, this.state.url, this.state.quote)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState(prevState => ({\r\n            self: ReactDOM.findDOMNode(this).getBoundingClientRect(),\r\n            quote: prevState.quotes[Math.floor(Math.random() * prevState.quotes.length)]\r\n        }));\r\n    }\r\n\r\n    handleClick(e) {\r\n        e.preventDefault();\r\n        this.setState(prevState => (\r\n            { isFlipped: !prevState.isFlipped,\r\n              isHovered: !prevState.isHovered\r\n            }\r\n        ));\r\n    }    \r\n\r\n    handleHover(){\r\n        this.setState(prevState => ({\r\n            isHovered: !prevState.isHovered\r\n        }));\r\n    }\r\n    \r\n    getHoverStyle(isHovered){\r\n        if (isHovered) {\r\n            return  {\r\n                transition: 'transform .2s',\r\n                transform: 'scale(1.2)',\r\n                zIndex: '1'\r\n            }\r\n        } else {\r\n            return {\r\n                transition: 'transform .2s', \r\n                transform: 'scale(1)' \r\n            }\r\n        }\r\n    }\r\n\r\n    getFlipStyle(isFlipped, self){\r\n        if (isFlipped){\r\n            return {\r\n                zIndex: '1',\r\n                position: 'absolute',\r\n                transform: `translateX(calc(60vw - (${self.x}))) translateY(calc(50vh - (${self.y}))) scale(1)`,\r\n            };\r\n        } else {\r\n            return {};\r\n        }\r\n    }\r\n\r\n    getCard(isFlipped, alt, src, quote){\r\n        return (\r\n            <ReactCardFlip  isFlipped={isFlipped} flipDirection=\"horizontal\">\r\n                {this.getFrontCard(alt, src)}\r\n                {this.getBackCard(quote)}\r\n            </ReactCardFlip>\r\n        );\r\n    }\r\n\r\n    getFrontCard(alt, src){\r\n        return ( \r\n        <div key='front' onMouseEnter={this.handleHover} onMouseLeave={this.handleHover}>\r\n            <img alt={alt} src={src} id='characterImage'></img>\r\n        </div>\r\n        );\r\n    }\r\n\r\n    getBackCard(quote){\r\n        return (\r\n        <div id='back' key='back'>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}
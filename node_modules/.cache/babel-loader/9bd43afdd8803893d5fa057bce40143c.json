{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elija\\\\Projects\\\\quote-generator\\\\src\\\\components\\\\QuoteCard.js\";\nimport React, { Component } from 'react';\nimport { FacebookShareButton, EmailShareButton, TwitterShareButton } from 'react-share';\nimport '../stylesheets/loadingScreen.css';\nexport default class QuoteCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quotes: this.props.quotes,\n      current: \"\"\n    };\n    this.newQuote = this.newQuote.bind(this);\n  }\n\n  componentDidMount() {\n    this.newQuote();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: this.props.className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"quoteBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"quote\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"q\", {\n      dangerouslySetInnerHTML: {\n        __html: this.state.current\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"author\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"-\", this.props.author)), React.createElement(\"div\", {\n      className: \"buttons \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"socialMedia\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(EmailShareButton, {\n      subject: \"The Office Quotes\",\n      body: \"\\\"\" + this.stripHtmlTags(this.state.current) + \"\\\"\" + \"    -\" + this.props.author,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button fa fa-envelope\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })), React.createElement(TwitterShareButton, {\n      title: \"The Office Quotes\",\n      via: \"https://elijah1368.github.io/The-Office-Quotes/\",\n      hashtags: \"#TheOffice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button fa fa-twitter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })), React.createElement(FacebookShareButton, {\n      url: \"https://elijah1368.github.io/The-Office-Quotes/\",\n      quote: \"\\\"\" + this.stripHtmlTags(this.state.current) + \"\\\"\" + \" -\" + this.props.author,\n      hashtag: \"#TheOffice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button fa fa-facebook\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }))), React.createElement(\"button\", {\n      className: \"button newQuote\",\n      id: \"new-quote\",\n      onClick: this.newQuote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"NEW QUOTE\"))));\n  }\n\n  stripHtmlTags(text) {\n    let plainText = text.replace(/<(.|\\n)*?>/g, '');\n    return plainText;\n  }\n\n  newQuote() {\n    let newQuote = this.state.quotes[Math.floor(Math.random() * this.state.quotes.length)];\n\n    while (newQuote === this.state.current) {\n      newQuote = this.state.quotes[Math.floor(Math.random() * this.state.quotes.length)];\n    }\n\n    this.setState(prevState => ({\n      current: newQuote\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Elija/Projects/quote-generator/src/components/QuoteCard.js"],"names":["React","Component","FacebookShareButton","EmailShareButton","TwitterShareButton","QuoteCard","constructor","props","state","quotes","current","newQuote","bind","componentDidMount","render","className","__html","author","stripHtmlTags","text","plainText","replace","Math","floor","random","length","setState","prevState"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,mBAAR,EAA6BC,gBAA7B,EAA+CC,kBAA/C,QAAwE,aAAxE;AACA,OAAO,kCAAP;AAGA,eAAe,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAC7CK,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,KAAKF,KAAL,CAAWE,MADV;AAETC,MAAAA,OAAO,EAAE;AAFA,KAAb;AAIA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf,SAAKF,QAAL;AACH;;AAEDG,EAAAA,MAAM,GAAE;AACJ,WACA;AAAK,MAAA,SAAS,EAAE,KAAKP,KAAL,CAAWQ,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAE,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,uBAAuB,EAAE;AAAEC,QAAAA,MAAM,EAAE,KAAKR,KAAL,CAAWE;AAArB,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAG,MAAA,SAAS,EAAG,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACE,KAAKH,KAAL,CAAWU,MADb,CAFJ,CADJ,EAOI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,gBAAD;AACI,MAAA,OAAO,EAAG,mBADd;AAEI,MAAA,IAAI,EAAI,OAAO,KAAKC,aAAL,CAAmB,KAAKV,KAAL,CAAWE,OAA9B,CAAP,GAAgD,IAAhD,GAAuD,OAAvD,GAAiE,KAAKH,KAAL,CAAWU,MAFxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI;AAAQ,MAAA,SAAS,EAAC,uBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ,EAMI,oBAAC,kBAAD;AACI,MAAA,KAAK,EAAG,mBADZ;AAEI,MAAA,GAAG,EAAG,iDAFV;AAGI,MAAA,QAAQ,EAAG,YAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII;AAAQ,MAAA,SAAS,EAAC,sBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CANJ,EAYI,oBAAC,mBAAD;AACI,MAAA,GAAG,EAAC,iDADR;AAEI,MAAA,KAAK,EAAE,OAAO,KAAKC,aAAL,CAAmB,KAAKV,KAAL,CAAWE,OAA9B,CAAP,GAAgD,IAAhD,GAAuD,IAAvD,GAA8D,KAAKH,KAAL,CAAWU,MAFpF;AAGI,MAAA,OAAO,EAAC,YAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII;AAAQ,MAAA,SAAS,EAAC,uBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAZJ,CADJ,EAqBI;AACA,MAAA,SAAS,EAAC,iBADV;AAEA,MAAA,EAAE,EAAC,WAFH;AAGA,MAAA,OAAO,EAAE,KAAKN,QAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBArBJ,CAPJ,CADJ,CADA;AAwCH;;AAEDO,EAAAA,aAAa,CAACC,IAAD,EAAM;AACf,QAAIC,SAAS,GAAGD,IAAI,CAACE,OAAL,CAAa,aAAb,EAA4B,EAA5B,CAAhB;AACA,WAAOD,SAAP;AACH;;AACDT,EAAAA,QAAQ,GAAE;AACN,QAAIA,QAAQ,GAAG,KAAKH,KAAL,CAAWC,MAAX,CAAkBa,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAAKhB,KAAL,CAAWC,MAAX,CAAkBgB,MAA7C,CAAlB,CAAf;;AACA,WAAOd,QAAQ,KAAK,KAAKH,KAAL,CAAWE,OAA/B,EAAuC;AACnCC,MAAAA,QAAQ,GAAG,KAAKH,KAAL,CAAWC,MAAX,CAAkBa,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAAKhB,KAAL,CAAWC,MAAX,CAAkBgB,MAA7C,CAAlB,CAAX;AACH;;AACD,SAAKC,QAAL,CAAcC,SAAS,KAAK;AACxBjB,MAAAA,OAAO,EAAEC;AADe,KAAL,CAAvB;AAGH;;AArE4C","sourcesContent":["import React, {Component} from 'react';\r\nimport {FacebookShareButton, EmailShareButton, TwitterShareButton} from 'react-share';\r\nimport '../stylesheets/loadingScreen.css';\r\n\r\n\r\nexport default class QuoteCard extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            quotes: this.props.quotes,\r\n            current: \"\"\r\n        };\r\n        this.newQuote = this.newQuote.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.newQuote();\r\n    }\r\n\r\n    render(){\r\n        return ( \r\n        <div className={this.props.className}>\r\n            <div className='quoteBox'>\r\n                <div className ='quote' > \r\n                    <q dangerouslySetInnerHTML={{ __html: this.state.current }}></q>\r\n                    <p className = 'author'>\r\n                    -{this.props.author}\r\n                    </p>\r\n                </div>\r\n                <div className=\"buttons \">\r\n                    <div className = \"socialMedia\">\r\n                        <EmailShareButton\r\n                            subject = 'The Office Quotes'\r\n                            body = {\"\\\"\" + this.stripHtmlTags(this.state.current) + \"\\\"\" + \"    -\" + this.props.author}>\r\n                            <button className=\"button fa fa-envelope\"></button>\r\n                        </EmailShareButton>\r\n                        <TwitterShareButton\r\n                            title = 'The Office Quotes'\r\n                            via = 'https://elijah1368.github.io/The-Office-Quotes/'\r\n                            hashtags = '#TheOffice'>\r\n                            <button className=\"button fa fa-twitter\"></button>\r\n                        </TwitterShareButton>\r\n                        <FacebookShareButton \r\n                            url='https://elijah1368.github.io/The-Office-Quotes/'\r\n                            quote={\"\\\"\" + this.stripHtmlTags(this.state.current) + \"\\\"\" + \" -\" + this.props.author}\r\n                            hashtag=\"#TheOffice\">\r\n                            <button className=\"button fa fa-facebook\"></button>\r\n                        </FacebookShareButton>\r\n                    </div>\r\n\r\n                    <button\r\n                    className=\"button newQuote\"\r\n                    id=\"new-quote\"\r\n                    onClick={this.newQuote}\r\n                    >\r\n                    NEW QUOTE\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div> );\r\n    }\r\n\r\n    stripHtmlTags(text){\r\n        let plainText = text.replace(/<(.|\\n)*?>/g, '');\r\n        return plainText;\r\n    }\r\n    newQuote(){\r\n        let newQuote = this.state.quotes[Math.floor(Math.random() * this.state.quotes.length)];\r\n        while (newQuote === this.state.current){\r\n            newQuote = this.state.quotes[Math.floor(Math.random() * this.state.quotes.length)];\r\n        }\r\n        this.setState(prevState => ({\r\n            current: newQuote\r\n        }));\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
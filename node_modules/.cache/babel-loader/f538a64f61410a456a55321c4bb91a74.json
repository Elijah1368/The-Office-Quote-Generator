{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elija\\\\Projects\\\\quote-generator\\\\random-quote-generator\\\\src\\\\components\\\\QuoteGenerator.js\";\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport '../stylesheets/style.css';\nimport { fetchQuotes, newQuote } from '../actions/index';\nimport CharacterCard from './CharacterCard';\n/*\r\nimport Andy from '../assets/Andy.png';\r\nimport Angela from '../assets/Angela.png';\r\nimport Dwight from '../assets/Dwight.png';\r\nimport Jim from '../assets/Jim.png';\r\nimport Kelly from '../assets/Kelly.png';\r\nimport Michael from '../assets/Michael.png';\r\nimport Pam from '../assets/Pam.png';\r\nimport Stanley from '../assets/Stanley.png';\r\n*/\n\nexport class QuoteGenerator extends Component {\n  componentDidMount() {\n    this.props.fetchQuotes('https://raw.githubusercontent.com/anderskristo/the-office-quotes/master/src/quotes/all.json', 'https://raw.githubusercontent.com/yoscheherazade/the-office-quotes-json/master/quotes.json');\n  }\n\n  render() {\n    console.log(this.props.quotes);\n    return (\n      /*\r\n      <div className= 'wrapper'>\r\n          <div className='grid'>\r\n              <CharacterCard name=\"Andy\" image={Andy} />\r\n              <CharacterCard name=\"Angela\" image={Angela}/>\r\n              <CharacterCard name=\"Dwight\" image={Dwight}/>\r\n              <CharacterCard name=\"Jim\" image={Jim}/>\r\n              <CharacterCard name=\"Kelly\" image={Kelly}/>\r\n              <CharacterCard name=\"Michael\" image={Michael}/>\r\n              <CharacterCard name=\"Pam\" image={Pam}/>\r\n              <CharacterCard name=\"Stanley\" image={Stanley}/>\r\n              </div> \r\n       </div>);\r\n      */\n      React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(CharacterCard, {\n        name: \"Andy\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(CharacterCard, {\n        name: \"Angela\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(CharacterCard, {\n        name: \"Dwight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(CharacterCard, {\n        name: \"Jim\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(CharacterCard, {\n        name: \"Kelly\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(CharacterCard, {\n        name: \"Michael\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(CharacterCard, {\n        name: \"Pam\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(CharacterCard, {\n        name: \"Stanley\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })))\n    );\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  quotes: state.quotes.data,\n  randomNumber: state.quotes.randomNumber,\n  loading: state.quotes.loading,\n  character: state.quotes.character\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchQuotes,\n  newQuote\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuoteGenerator);","map":{"version":3,"sources":["C:/Users/Elija/Projects/quote-generator/random-quote-generator/src/components/QuoteGenerator.js"],"names":["React","Component","bindActionCreators","connect","fetchQuotes","newQuote","CharacterCard","QuoteGenerator","componentDidMount","props","render","console","log","quotes","mapStateToProps","state","data","randomNumber","loading","character","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,0BAAP;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,kBAAtC;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AACA;;;;;;;;;;;AAWA,OAAO,MAAMC,cAAN,SAA6BN,SAA7B,CAAuC;AAE1CO,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWL,WAAX,CAAuB,6FAAvB,EACA,4FADA;AAEH;;AAEDM,EAAAA,MAAM,GAAE;AACJC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWI,MAAvB;AACA;AACA;;;;;;;;;;;;;;AAcD;AAAK,QAAA,SAAS,EAAE,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAII,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAKI,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EAMI,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,EAOI,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,EAQI,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,CADA;AAfC;AA2BH;;AApCyC;;AAuC9C,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BF,EAAAA,MAAM,EAAEE,KAAK,CAACF,MAAN,CAAaG,IADS;AAE9BC,EAAAA,YAAY,EAAEF,KAAK,CAACF,MAAN,CAAaI,YAFG;AAG9BC,EAAAA,OAAO,EAAEH,KAAK,CAACF,MAAN,CAAaK,OAHQ;AAI9BC,EAAAA,SAAS,EAAEJ,KAAK,CAACF,MAAN,CAAaM;AAJM,CAAL,CAA7B;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,IAC/BnB,kBAAkB,CACd;AACIE,EAAAA,WADJ;AAEIC,EAAAA;AAFJ,CADc,EAKdgB,QALc,CADtB;;AASA,eAAelB,OAAO,CAACW,eAAD,EAAkBM,kBAAlB,CAAP,CAA6Cb,cAA7C,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport '../stylesheets/style.css';\r\nimport { fetchQuotes, newQuote } from '../actions/index';\r\n\r\nimport CharacterCard from './CharacterCard';\r\n/*\r\nimport Andy from '../assets/Andy.png';\r\nimport Angela from '../assets/Angela.png';\r\nimport Dwight from '../assets/Dwight.png';\r\nimport Jim from '../assets/Jim.png';\r\nimport Kelly from '../assets/Kelly.png';\r\nimport Michael from '../assets/Michael.png';\r\nimport Pam from '../assets/Pam.png';\r\nimport Stanley from '../assets/Stanley.png';\r\n*/\r\n\r\nexport class QuoteGenerator extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.fetchQuotes('https://raw.githubusercontent.com/anderskristo/the-office-quotes/master/src/quotes/all.json', \r\n        'https://raw.githubusercontent.com/yoscheherazade/the-office-quotes-json/master/quotes.json');\r\n    }\r\n\r\n    render(){\r\n        console.log(this.props.quotes);\r\n        return (\r\n        /*\r\n        <div className= 'wrapper'>\r\n            <div className='grid'>\r\n                <CharacterCard name=\"Andy\" image={Andy} />\r\n                <CharacterCard name=\"Angela\" image={Angela}/>\r\n                <CharacterCard name=\"Dwight\" image={Dwight}/>\r\n                <CharacterCard name=\"Jim\" image={Jim}/>\r\n                <CharacterCard name=\"Kelly\" image={Kelly}/>\r\n                <CharacterCard name=\"Michael\" image={Michael}/>\r\n                <CharacterCard name=\"Pam\" image={Pam}/>\r\n                <CharacterCard name=\"Stanley\" image={Stanley}/>\r\n                </div> \r\n         </div>);\r\n        */\r\n       <div className= 'wrapper'>\r\n       <div className='grid'>\r\n           <CharacterCard name=\"Andy\" />\r\n           <CharacterCard name=\"Angela\" />\r\n           <CharacterCard name=\"Dwight\" />\r\n           <CharacterCard name=\"Jim\" />          \r\n           <CharacterCard name=\"Kelly\" />\r\n           <CharacterCard name=\"Michael\" />\r\n           <CharacterCard name=\"Pam\" />          \r\n           <CharacterCard name=\"Stanley\" />\r\n           </div> \r\n    </div>);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    quotes: state.quotes.data,\r\n    randomNumber: state.quotes.randomNumber,\r\n    loading: state.quotes.loading,\r\n    character: state.quotes.character\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => \r\n    bindActionCreators(\r\n        {\r\n            fetchQuotes,\r\n            newQuote,\r\n        },\r\n        dispatch\r\n    );\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuoteGenerator);"]},"metadata":{},"sourceType":"module"}
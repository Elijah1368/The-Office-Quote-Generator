{"ast":null,"code":"const emptyQuotes = {\n  current: \"\",\n  quotes: []\n};\nconst initialState = {\n  Andy: {\n    emptyQuotes\n  },\n  Michael: {\n    emptyQuotes\n  },\n  Stanley: {\n    emptyQuotes\n  },\n  Kelly: {\n    emptyQuotes\n  },\n  Dwight: {\n    emptyQuotes\n  },\n  Pam: {\n    emptyQuotes\n  },\n  Jim: {\n    emptyQuotes\n  },\n  Angela: {\n    emptyQuotes\n  }\n};\nexport default function (state = initialState, action) {\n  if (!action.hasOwnProperty('payload') || !action) {\n    action = {\n      payload: {}\n    };\n  }\n\n  switch (action.type) {\n    case 'FETCH_QUOTES':\n      return Object.assign({}, action.payload);\n\n    case 'NEW_QUOTE':\n      let newState = {\n        state\n      };\n      newState[action.payload].current = newState[action.payload].quotes[Math.floor(Math.random() * quotes[action.payload].quotes.length)];\n      return newState;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Elija/Projects/quote-generator/src/reducers/quoteReducer.js"],"names":["emptyQuotes","current","quotes","initialState","Andy","Michael","Stanley","Kelly","Dwight","Pam","Jim","Angela","state","action","hasOwnProperty","payload","type","Object","assign","newState","Math","floor","random","length"],"mappings":"AACA,MAAMA,WAAW,GAAG;AAACC,EAAAA,OAAO,EAAE,EAAV;AAAcC,EAAAA,MAAM,EAAC;AAArB,CAApB;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAI;AAACJ,IAAAA;AAAD,GADS;AAEjBK,EAAAA,OAAO,EAAC;AAACL,IAAAA;AAAD,GAFS;AAGjBM,EAAAA,OAAO,EAAC;AAACN,IAAAA;AAAD,GAHS;AAIjBO,EAAAA,KAAK,EAAG;AAACP,IAAAA;AAAD,GAJS;AAKjBQ,EAAAA,MAAM,EAAE;AAACR,IAAAA;AAAD,GALS;AAMjBS,EAAAA,GAAG,EAAK;AAACT,IAAAA;AAAD,GANS;AAOjBU,EAAAA,GAAG,EAAK;AAACV,IAAAA;AAAD,GAPS;AAQjBW,EAAAA,MAAM,EAAE;AAACX,IAAAA;AAAD;AARS,CAArB;AAYA,eAAe,UAAUY,KAAK,GAAGT,YAAlB,EAAgCU,MAAhC,EAAuC;AAElD,MAAI,CAACA,MAAM,CAACC,cAAP,CAAsB,SAAtB,CAAD,IAAqC,CAACD,MAA1C,EAAiD;AAC7CA,IAAAA,MAAM,GAAG;AAACE,MAAAA,OAAO,EAAC;AAAT,KAAT;AACH;;AACD,UAAQF,MAAM,CAACG,IAAf;AACI,SAAK,cAAL;AACI,aAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,MAAM,CAACE,OAAzB,CAAP;;AACJ,SAAK,WAAL;AACI,UAAII,QAAQ,GAAG;AAACP,QAAAA;AAAD,OAAf;AACAO,MAAAA,QAAQ,CAACN,MAAM,CAACE,OAAR,CAAR,CAAyBd,OAAzB,GAAmCkB,QAAQ,CAACN,MAAM,CAACE,OAAR,CAAR,CAAyBb,MAAzB,CAAgCkB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBpB,MAAM,CAACW,MAAM,CAACE,OAAR,CAAN,CAAuBb,MAAvB,CAA8BqB,MAAzD,CAAhC,CAAnC;AACA,aAAOJ,QAAP;;AACJ;AACI,aAAOP,KAAP;AARR;AAUH","sourcesContent":["\r\nconst emptyQuotes = {current: \"\", quotes:[]}\r\nconst initialState = {\r\n    Andy:   {emptyQuotes},\r\n    Michael:{emptyQuotes},\r\n    Stanley:{emptyQuotes},\r\n    Kelly:  {emptyQuotes},\r\n    Dwight: {emptyQuotes},\r\n    Pam:    {emptyQuotes},\r\n    Jim:    {emptyQuotes},\r\n    Angela: {emptyQuotes}\r\n};\r\n\r\n  \r\nexport default function (state = initialState, action){\r\n\r\n    if (!action.hasOwnProperty('payload') || !action){\r\n        action = {payload:{}};\r\n    } \r\n    switch (action.type){\r\n        case 'FETCH_QUOTES':\r\n            return Object.assign({}, action.payload);\r\n        case 'NEW_QUOTE':\r\n            let newState = {state};\r\n            newState[action.payload].current = newState[action.payload].quotes[Math.floor(Math.random() * quotes[action.payload].quotes.length)];\r\n            return newState;\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Elija\\\\Projects\\\\quote-generator\\\\random-quote-generator\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\Elija\\\\Projects\\\\quote-generator\\\\random-quote-generator\\\\src\\\\components\\\\CharacterCard.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactCardFlip from 'react-card-flip';\nimport '../stylesheets/style.css';\nexport default class CharacterCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFlipped: false,\n      isHovered: false,\n      url: props.image,\n      name: props.name,\n      quotes: props.quotes,\n      self: null\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleHover = this.handleHover.bind(this);\n    this.getFlipStyle = this.getFlipStyle.bind(this);\n    this.getHoverStyle = this.getHoverStyle.bind(this);\n    this.getZIndex = this.getZIndex.bind(this);\n  }\n\n  render() {\n    return React.createElement(ReactCardFlip, {\n      isFlipped: this.state.isFlipped,\n      containerStyle: _objectSpread({}, this.getZIndex(), {}, this.getFlipStyle()),\n      flipDirection: \"horizontal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, this.getFrontCard(this.state.name, this.state.url), this.getBackCard(this.state.quote));\n  }\n\n  componentDidMount() {\n    this.setState(prevState => ({\n      self: ReactDOM.findDOMNode(this).getBoundingClientRect(),\n      quote: prevState.quotes[Math.floor(Math.random() * prevState.quotes.length)]\n    }));\n  }\n\n  clickFront(e) {\n    e.preventDefault();\n    this.setState(prevState => ({\n      isFlipped: true,\n      face: 'front'\n    }));\n  }\n\n  clickBack(e) {\n    e.preventDefault();\n    this.setState(prevState => ({\n      isFlipped: true,\n      face: 'back'\n    }));\n  }\n\n  handleHover() {\n    this.setState(prevState => ({\n      isHovered: !prevState.isHovered,\n      zIndex: -prevState.zIndex\n    }));\n  }\n\n  getZIndex() {\n    if (this.state.isHovered || this.state.isFlipped) {\n      return {\n        zIndex: 1\n      };\n    } else {\n      return {};\n    }\n  }\n\n  getHoverStyle() {\n    if (this.state.isHovered && !this.state.isFlipped) {\n      return {\n        transition: 'transform .2s',\n        transform: 'scale(1.2)'\n      };\n    } else {\n      return {\n        transition: 'transform .2s',\n        transform: 'scale(1)'\n      };\n    }\n  }\n\n  getFlipStyle() {\n    if (this.state.isFlipped) {\n      this.setState(prevState => ({\n        isFlipped: false\n      }));\n\n      if (this.state.face == 'face') {\n        return this.flip();\n      } else {\n        return this.unflip();\n      }\n    } else {\n      return {};\n    }\n  }\n\n  flip() {\n    let width = 17.15;\n    let height = 20.5;\n    let id = setInterval(frame, 5);\n\n    function frame() {\n      if (width >= 69 && height >= 41.5) {\n        clearInterval(id);\n      } else {\n        width += width >= 69 ? 1 : 0;\n        height += height >= 41.5 ? .5 : 0;\n        return {\n          width: width + 'vw',\n          height: height + 'vw'\n        };\n      }\n    }\n  }\n\n  unflip() {\n    let width = 69;\n    let height = 41.5;\n    let id = setInterval(frame, 5);\n\n    function frame() {\n      if (width <= 16 && height <= 20.5) {\n        clearInterval(id);\n      } else {\n        width -= width <= 16 ? 1 : 0;\n        height -= height <= 20.5 ? .5 : 0;\n        return {\n          width: width + 'vw',\n          height: height + 'vw'\n        };\n      }\n    }\n  }\n\n  getFrontCard(alt, src) {\n    return React.createElement(\"div\", {\n      key: \"front\",\n      onMouseEnter: this.handleHover,\n      onMouseLeave: this.handleHover,\n      style: this.getHoverStyle(),\n      onClick: this.clickFront,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: alt,\n      src: src,\n      id: \"characterImage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }));\n  }\n\n  getBackCard(quote) {\n    return React.createElement(\"div\", {\n      id: \"back\",\n      key: \"back\",\n      onClick: this.clickBack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Elija/Projects/quote-generator/random-quote-generator/src/components/CharacterCard.js"],"names":["React","Component","ReactDOM","ReactCardFlip","CharacterCard","constructor","props","state","isFlipped","isHovered","url","image","name","quotes","self","handleClick","bind","handleHover","getFlipStyle","getHoverStyle","getZIndex","render","getFrontCard","getBackCard","quote","componentDidMount","setState","prevState","findDOMNode","getBoundingClientRect","Math","floor","random","length","clickFront","e","preventDefault","face","clickBack","zIndex","transition","transform","flip","unflip","width","height","id","setInterval","frame","clearInterval","alt","src"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactCardFlip from 'react-card-flip';\r\nimport '../stylesheets/style.css';\r\n\r\nexport default class CharacterCard extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isFlipped: false,\r\n            isHovered: false,\r\n            url: props.image,\r\n            name: props.name,\r\n            quotes: props.quotes,\r\n            self: null\r\n        };\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleHover = this.handleHover.bind(this);\r\n        this.getFlipStyle = this.getFlipStyle.bind(this);\r\n        this.getHoverStyle = this.getHoverStyle.bind(this);\r\n        this.getZIndex = this.getZIndex.bind(this);\r\n    }\r\n\r\n    render(){\r\n        return (            \r\n            <ReactCardFlip  isFlipped={this.state.isFlipped} containerStyle={{...this.getZIndex(), ...this.getFlipStyle()}} flipDirection=\"horizontal\">\r\n                {this.getFrontCard(this.state.name, this.state.url)}\r\n                {this.getBackCard(this.state.quote)}\r\n            </ReactCardFlip>\r\n        );\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.setState(prevState => ({\r\n            self: ReactDOM.findDOMNode(this).getBoundingClientRect(),\r\n            quote: prevState.quotes[Math.floor(Math.random() * prevState.quotes.length)]\r\n        }));\r\n    }\r\n    \r\n    clickFront(e) {\r\n        e.preventDefault();\r\n        this.setState(prevState => ({ \r\n                isFlipped: true,\r\n                face: 'front'\r\n            }));\r\n    }   \r\n    \r\n    clickBack(e) {\r\n        e.preventDefault();\r\n        this.setState(prevState => ({ \r\n                isFlipped: true,\r\n                face: 'back'\r\n            }));\r\n    } \r\n\r\n    handleHover(){\r\n        this.setState(prevState => ({\r\n            isHovered: !prevState.isHovered,\r\n            zIndex: -prevState.zIndex\r\n        }));\r\n    }\r\n\r\n    getZIndex(){\r\n        if (this.state.isHovered || this.state.isFlipped){\r\n            return {\r\n                zIndex:1};\r\n        } else {\r\n            return {};\r\n        }\r\n    }\r\n    \r\n    getHoverStyle(){\r\n        if (this.state.isHovered && !this.state.isFlipped) {\r\n            return  {\r\n                transition: 'transform .2s',\r\n                transform: 'scale(1.2)',\r\n            }\r\n        } else {\r\n            return {\r\n                transition: 'transform .2s', \r\n                transform: 'scale(1)' \r\n            }\r\n        }\r\n    }\r\n\r\n    getFlipStyle(){\r\n        if (this.state.isFlipped){\r\n            this.setState(prevState=>({isFlipped:false}));\r\n            if (this.state.face == 'face'){\r\n                return this.flip();\r\n            } else {\r\n                return this.unflip();\r\n            }\r\n        } else {\r\n            return {};\r\n        }\r\n    }\r\n\r\n    flip(){\r\n        let width= 17.15;\r\n        let height= 20.5;\r\n        let id = setInterval(frame, 5);\r\n        function frame() {\r\n          if (width >= 69 && height >= 41.5) {\r\n            clearInterval(id);\r\n          } else {\r\n            width += width >= 69 ? 1 : 0;\r\n            height += height >= 41.5 ? .5 :0;\r\n            return {\r\n                width: width + 'vw',\r\n                height: height + 'vw'\r\n            }\r\n          }\r\n        }\r\n    }\r\n\r\n    unflip(){\r\n        let width= 69;\r\n        let height= 41.5;\r\n        let id = setInterval(frame, 5);\r\n        function frame() {\r\n          if (width <= 16 && height <= 20.5) {\r\n            clearInterval(id);\r\n          } else {\r\n            width -= width <= 16 ? 1 : 0;\r\n            height -= height <= 20.5 ? .5 :0;\r\n            return {\r\n                width: width + 'vw',\r\n                height: height + 'vw'\r\n            }\r\n          }\r\n        }\r\n    }\r\n\r\n\r\n    getFrontCard(alt, src){\r\n        return ( \r\n        <div key='front' onMouseEnter={this.handleHover} onMouseLeave={this.handleHover} style={this.getHoverStyle()} onClick={this.clickFront}>\r\n            <img alt={alt} src={src} id='characterImage'></img>\r\n        </div>\r\n        );\r\n    }\r\n\r\n    getBackCard(quote){\r\n        return (\r\n        <div id='back' key='back' onClick={this.clickBack}>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}
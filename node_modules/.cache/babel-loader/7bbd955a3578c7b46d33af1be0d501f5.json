{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Elija\\\\Projects\\\\quote-generator\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Elija\\\\Projects\\\\quote-generator\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\Elija\\\\Projects\\\\quote-generator\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\Elija\\\\Projects\\\\quote-generator\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"C:\\\\Users\\\\Elija\\\\Projects\\\\quote-generator\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\Users\\\\Elija\\\\Projects\\\\quote-generator\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import{FacebookShareButton,EmailShareButton,TwitterShareButton}from'react-share';import'../stylesheets/loadingScreen.css';var QuoteCard=/*#__PURE__*/function(_Component){_inherits(QuoteCard,_Component);function QuoteCard(props){var _this;_classCallCheck(this,QuoteCard);_this=_possibleConstructorReturn(this,_getPrototypeOf(QuoteCard).call(this,props));_this.state={quotes:_this.props.quotes,current:\"\"};_this.newQuote=_this.newQuote.bind(_assertThisInitialized(_this));return _this;}_createClass(QuoteCard,[{key:\"componentDidMount\",value:function componentDidMount(){this.newQuote();}},{key:\"render\",value:function render(){var quote=\"\\\"\"+this.stripHtmlTags(this.state.current)+\"\\\"\"+\"    -\"+this.props.author;return React.createElement(\"div\",{className:this.props.className},React.createElement(\"div\",{className:\"quoteBox\"},React.createElement(\"div\",{className:\"quote\"},React.createElement(\"q\",{dangerouslySetInnerHTML:{__html:this.state.current}}),React.createElement(\"p\",{className:\"author\"},\"-\",this.props.author)),React.createElement(\"div\",{className:\"buttons \"},React.createElement(\"div\",{className:\"socialMedia\"},React.createElement(EmailShareButton,{subject:\"The Office Quotes\",body:quote},React.createElement(\"button\",{className:\"button fa fa-envelope\"})),React.createElement(\"a\",{href:'https://twitter.com/intent/tweet?text='+quote},React.createElement(\"button\",{className:\"button fa fa-twitter\"})),React.createElement(FacebookShareButton,{url:\"https://elijah1368.github.io/The-Office-Quotes/\",quote:quote,hashtag:\"#TheOffice\"},React.createElement(\"button\",{className:\"button fa fa-facebook\"}))),React.createElement(\"button\",{className:\"button newQuote\",id:\"new-quote\",onClick:this.newQuote},\"NEW QUOTE\"))));}},{key:\"stripHtmlTags\",value:function stripHtmlTags(text){var plainText=text.replace(/<(.|\\n)*?>/g,'');return plainText;}},{key:\"newQuote\",value:function newQuote(){var newQuote=this.state.quotes[Math.floor(Math.random()*this.state.quotes.length)];while(newQuote===this.state.current){newQuote=this.state.quotes[Math.floor(Math.random()*this.state.quotes.length)];}this.setState(function(prevState){return{current:newQuote};});}}]);return QuoteCard;}(Component);export{QuoteCard as default};","map":{"version":3,"sources":["C:/Users/Elija/Projects/quote-generator/src/components/QuoteCard.js"],"names":["React","Component","FacebookShareButton","EmailShareButton","TwitterShareButton","QuoteCard","props","state","quotes","current","newQuote","bind","quote","stripHtmlTags","author","className","__html","text","plainText","replace","Math","floor","random","length","setState","prevState"],"mappings":"wgCAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,OAAQC,mBAAR,CAA6BC,gBAA7B,CAA+CC,kBAA/C,KAAwE,aAAxE,CACA,MAAO,kCAAP,C,GAGqBC,CAAAA,S,mEACjB,mBAAYC,KAAZ,CAAkB,2CACd,2EAAMA,KAAN,GACA,MAAKC,KAAL,CAAa,CACTC,MAAM,CAAE,MAAKF,KAAL,CAAWE,MADV,CAETC,OAAO,CAAE,EAFA,CAAb,CAIA,MAAKC,QAAL,CAAgB,MAAKA,QAAL,CAAcC,IAAd,+BAAhB,CANc,aAOjB,C,mFAEkB,CACf,KAAKD,QAAL,GACH,C,uCAEO,CACJ,GAAIE,CAAAA,KAAK,CAAG,KAAO,KAAKC,aAAL,CAAmB,KAAKN,KAAL,CAAWE,OAA9B,CAAP,CAAgD,IAAhD,CAAuD,OAAvD,CAAiE,KAAKH,KAAL,CAAWQ,MAAxF,CACA,MACA,4BAAK,SAAS,CAAE,KAAKR,KAAL,CAAWS,SAA3B,EACI,2BAAK,SAAS,CAAC,UAAf,EACI,2BAAK,SAAS,CAAE,OAAhB,EACI,yBAAG,uBAAuB,CAAE,CAAEC,MAAM,CAAE,KAAKT,KAAL,CAAWE,OAArB,CAA5B,EADJ,CAEI,yBAAG,SAAS,CAAG,QAAf,MACE,KAAKH,KAAL,CAAWQ,MADb,CAFJ,CADJ,CAOI,2BAAK,SAAS,CAAC,UAAf,EACI,2BAAK,SAAS,CAAG,aAAjB,EACI,oBAAC,gBAAD,EACI,OAAO,CAAG,mBADd,CAEI,IAAI,CAAIF,KAFZ,EAGI,8BAAQ,SAAS,CAAC,uBAAlB,EAHJ,CADJ,CAMI,yBAAG,IAAI,CAAI,yCAA2CA,KAAtD,EACI,8BAAQ,SAAS,CAAC,sBAAlB,EADJ,CANJ,CASI,oBAAC,mBAAD,EACI,GAAG,CAAC,iDADR,CAEI,KAAK,CAAEA,KAFX,CAGI,OAAO,CAAC,YAHZ,EAII,8BAAQ,SAAS,CAAC,uBAAlB,EAJJ,CATJ,CADJ,CAkBI,8BACA,SAAS,CAAC,iBADV,CAEA,EAAE,CAAC,WAFH,CAGA,OAAO,CAAE,KAAKF,QAHd,cAlBJ,CAPJ,CADJ,CADA,CAqCH,C,oDAEaO,I,CAAK,CACf,GAAIC,CAAAA,SAAS,CAAGD,IAAI,CAACE,OAAL,CAAa,aAAb,CAA4B,EAA5B,CAAhB,CACA,MAAOD,CAAAA,SAAP,CACH,C,2CACS,CACN,GAAIR,CAAAA,QAAQ,CAAG,KAAKH,KAAL,CAAWC,MAAX,CAAkBY,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgB,KAAKf,KAAL,CAAWC,MAAX,CAAkBe,MAA7C,CAAlB,CAAf,CACA,MAAOb,QAAQ,GAAK,KAAKH,KAAL,CAAWE,OAA/B,CAAuC,CACnCC,QAAQ,CAAG,KAAKH,KAAL,CAAWC,MAAX,CAAkBY,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgB,KAAKf,KAAL,CAAWC,MAAX,CAAkBe,MAA7C,CAAlB,CAAX,CACH,CACD,KAAKC,QAAL,CAAc,SAAAC,SAAS,QAAK,CACxBhB,OAAO,CAAEC,QADe,CAAL,EAAvB,EAGH,C,uBAnEkCT,S,SAAlBI,S","sourcesContent":["import React, {Component} from 'react';\r\nimport {FacebookShareButton, EmailShareButton, TwitterShareButton} from 'react-share';\r\nimport '../stylesheets/loadingScreen.css';\r\n\r\n\r\nexport default class QuoteCard extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            quotes: this.props.quotes,\r\n            current: \"\"\r\n        };\r\n        this.newQuote = this.newQuote.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.newQuote();\r\n    }\r\n\r\n    render(){\r\n        let quote = \"\\\"\" + this.stripHtmlTags(this.state.current) + \"\\\"\" + \"    -\" + this.props.author;\r\n        return ( \r\n        <div className={this.props.className}>\r\n            <div className='quoteBox'>\r\n                <div className ='quote' > \r\n                    <q dangerouslySetInnerHTML={{ __html: this.state.current }}></q>\r\n                    <p className = 'author'>\r\n                    -{this.props.author}\r\n                    </p>\r\n                </div>\r\n                <div className=\"buttons \">\r\n                    <div className = \"socialMedia\">\r\n                        <EmailShareButton\r\n                            subject = 'The Office Quotes'\r\n                            body = {quote}>\r\n                            <button className=\"button fa fa-envelope\"></button>\r\n                        </EmailShareButton>\r\n                        <a href = {'https://twitter.com/intent/tweet?text=' + quote}>\r\n                            <button className=\"button fa fa-twitter\"></button>\r\n                        </a>\r\n                        <FacebookShareButton \r\n                            url='https://elijah1368.github.io/The-Office-Quotes/'\r\n                            quote={quote}\r\n                            hashtag=\"#TheOffice\">\r\n                            <button className=\"button fa fa-facebook\"></button>\r\n                        </FacebookShareButton>\r\n                    </div>\r\n\r\n                    <button\r\n                    className=\"button newQuote\"\r\n                    id=\"new-quote\"\r\n                    onClick={this.newQuote}\r\n                    >\r\n                    NEW QUOTE\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div> );\r\n    }\r\n\r\n    stripHtmlTags(text){\r\n        let plainText = text.replace(/<(.|\\n)*?>/g, '');\r\n        return plainText;\r\n    }\r\n    newQuote(){\r\n        let newQuote = this.state.quotes[Math.floor(Math.random() * this.state.quotes.length)];\r\n        while (newQuote === this.state.current){\r\n            newQuote = this.state.quotes[Math.floor(Math.random() * this.state.quotes.length)];\r\n        }\r\n        this.setState(prevState => ({\r\n            current: newQuote\r\n        }));\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
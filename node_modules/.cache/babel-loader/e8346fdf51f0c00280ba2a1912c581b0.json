{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Elija\\\\Projects\\\\quote-generator\\\\random-quote-generator\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\Elija\\\\Projects\\\\quote-generator\\\\random-quote-generator\\\\src\\\\components\\\\CharacterCard.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactCardFlip from 'react-card-flip';\nimport '../stylesheets/style.css';\nexport default class CharacterCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFlipped: false,\n      isHovered: false,\n      url: props.image,\n      name: props.name,\n      quotes: props.quotes,\n      self: null\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleHover = this.handleHover.bind(this);\n    this.getFlipStyle = this.getFlipStyle.bind(this);\n    this.getHoverStyle = this.getHoverStyle.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      onClick: this.handleClick,\n      style: _objectSpread({}, this.getHoverStyle(), {}, this.getFlipStyle()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, this.getCard(this.state.isFlipped, this.state.name, this.state.url, this.state.quote));\n  }\n\n  componentDidMount() {\n    this.setState(prevState => ({\n      self: ReactDOM.findDOMNode(this).getBoundingClientRect(),\n      quote: prevState.quotes[Math.floor(Math.random() * prevState.quotes.length)]\n    }));\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    this.setState(prevState => ({\n      isFlipped: !prevState.isFlipped\n    }));\n  }\n\n  handleHover() {\n    this.setState(prevState => ({\n      isHovered: !prevState.isHovered\n    }));\n  }\n\n  getHoverStyle() {\n    if (this.state.isHovered) {\n      return {\n        transition: 'transform .2s',\n        transform: 'scale(1.2)',\n        zIndex: '1'\n      };\n    } else {\n      return {\n        transition: 'transform .2s',\n        transform: 'scale(1)'\n      };\n    }\n  }\n\n  getFlipStyle() {\n    if (this.state.isFlipped) {\n      return {\n        transform: '.2s',\n        zIndex: '1',\n        position: 'absolute',\n        transform: `translateX(calc(60vw - (${this.state.self.x}))) translateY(calc(50vh - (${this.state.self.y}))) scale(3)`\n      };\n    } else {\n      return {};\n    }\n  }\n\n  getCard(isFlipped, alt, src, quote) {\n    return React.createElement(ReactCardFlip, {\n      isFlipped: isFlipped,\n      flipDirection: \"horizontal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.getFrontCard(alt, src), this.getBackCard(quote));\n  }\n\n  getFrontCard(alt, src) {\n    return React.createElement(\"div\", {\n      key: \"front\",\n      onMouseEnter: this.handleHover,\n      onMouseLeave: this.handleHover,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: alt,\n      src: src,\n      id: \"characterImage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }));\n  }\n\n  getBackCard(quote) {\n    return React.createElement(\"div\", {\n      id: \"back\",\n      key: \"back\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Elija/Projects/quote-generator/random-quote-generator/src/components/CharacterCard.js"],"names":["React","Component","ReactDOM","ReactCardFlip","CharacterCard","constructor","props","state","isFlipped","isHovered","url","image","name","quotes","self","handleClick","bind","handleHover","getFlipStyle","getHoverStyle","render","getCard","quote","componentDidMount","setState","prevState","findDOMNode","getBoundingClientRect","Math","floor","random","length","e","preventDefault","transition","transform","zIndex","position","x","y","alt","src","getFrontCard","getBackCard"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactCardFlip from 'react-card-flip';\r\nimport '../stylesheets/style.css';\r\n\r\nexport default class CharacterCard extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isFlipped: false,\r\n            isHovered: false,\r\n            url: props.image,\r\n            name: props.name,\r\n            quotes: props.quotes,\r\n            self: null\r\n        };\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleHover = this.handleHover.bind(this);\r\n        this.getFlipStyle = this.getFlipStyle.bind(this);\r\n        this.getHoverStyle = this.getHoverStyle.bind(this);\r\n    }\r\n\r\n    render(){    \r\n        return (\r\n            <div onClick = {this.handleClick}  style={{...this.getHoverStyle(), ...this.getFlipStyle()}}>\r\n                {this.getCard(this.state.isFlipped, this.state.name, this.state.url, this.state.quote)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState(prevState => ({\r\n            self: ReactDOM.findDOMNode(this).getBoundingClientRect(),\r\n            quote: prevState.quotes[Math.floor(Math.random() * prevState.quotes.length)]\r\n        }));\r\n    }\r\n\r\n    handleClick(e) {\r\n        e.preventDefault();\r\n        this.setState(prevState => (\r\n            { isFlipped: !prevState.isFlipped,\r\n            }\r\n        ));\r\n    }    \r\n\r\n    handleHover(){\r\n        this.setState(prevState => ({\r\n            isHovered: !prevState.isHovered\r\n        }));\r\n    }\r\n    \r\n    getHoverStyle(){\r\n        if (this.state.isHovered) {\r\n            return  {\r\n                transition: 'transform .2s',\r\n                transform: 'scale(1.2)',\r\n                zIndex: '1'\r\n            }\r\n        } else {\r\n            return {\r\n                transition: 'transform .2s', \r\n                transform: 'scale(1)' \r\n            }\r\n        }\r\n    }\r\n\r\n    getFlipStyle(){\r\n        if (this.state.isFlipped){\r\n            return {\r\n                transform: '.2s',\r\n                zIndex: '1',\r\n                position: 'absolute',\r\n                transform: `translateX(calc(60vw - (${this.state.self.x}))) translateY(calc(50vh - (${this.state.self.y}))) scale(3)`,\r\n            };\r\n        } else {\r\n            return {};\r\n        }\r\n    }\r\n\r\n    getCard(isFlipped, alt, src, quote){\r\n        return (\r\n            <ReactCardFlip  isFlipped={isFlipped} flipDirection=\"horizontal\">\r\n                {this.getFrontCard(alt, src)}\r\n                {this.getBackCard(quote)}\r\n            </ReactCardFlip>\r\n        );\r\n    }\r\n\r\n    getFrontCard(alt, src){\r\n        return ( \r\n        <div key='front' onMouseEnter={this.handleHover} onMouseLeave={this.handleHover}>\r\n            <img alt={alt} src={src} id='characterImage'></img>\r\n        </div>\r\n        );\r\n    }\r\n\r\n    getBackCard(quote){\r\n        return (\r\n        <div id='back' key='back' >\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}
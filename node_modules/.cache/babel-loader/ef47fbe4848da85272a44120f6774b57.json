{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elija\\\\Projects\\\\quote-generator\\\\random-quote-generator\\\\src\\\\components\\\\CardMenu.js\";\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport '../stylesheets/style.css';\nimport { fetchQuotes } from '../actions/index';\nimport { getImages } from '../actions/index';\nimport { flipCard } from '../actions/index';\nimport QuoteCard from './QuoteCard';\nimport LoadingScreen from './LoadingScreen';\nimport Card from './Card';\nexport class CardMenu extends Component {\n  render() {\n    if (this.props.quotes['Andy']) {\n      return;\n      {\n        this.props.images.map(url => React.createElement(Card, {\n          front: React.createElement(\"img\", {\n            src: url,\n            id: \"characterImages\",\n            alt: this.extractName({\n              url\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 19\n            },\n            __self: this\n          }),\n          back: React.createElement(QuoteCard, {\n            quotes: this.props.quotes[this.extractName(url)],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 20\n            },\n            __self: this\n          }),\n          isFlipped: this.props.isCardFlipped,\n          flip: this.flip,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }));\n      }\n      ;\n    } else {\n      return React.createElement(LoadingScreen, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      });\n    }\n  }\n\n  flip() {\n    this.props.flipCard();\n  }\n\n  componentDidMount() {\n    this.props.fetchQuotes('https://raw.githubusercontent.com/anderskristo/the-office-quotes/master/src/quotes/all.json', 'https://raw.githubusercontent.com/yoscheherazade/the-office-quotes-json/master/quotes.json');\n    this.props.getImages();\n  }\n\n  extractName(url) {\n    let fileName = url.substr(url.lastIndexOf('/') + 1);\n    let name = fileName.substr(0, fileName.lastIndexOf('.'));\n    return name;\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  quotes: state.quotes.data,\n  images: state.images.data,\n  isCardFlipped: state.cards.isFlipped\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchQuotes,\n  getImages,\n  flipCard\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardMenu);","map":{"version":3,"sources":["C:/Users/Elija/Projects/quote-generator/random-quote-generator/src/components/CardMenu.js"],"names":["React","Component","bindActionCreators","connect","fetchQuotes","getImages","flipCard","QuoteCard","LoadingScreen","Card","CardMenu","render","props","quotes","images","map","url","extractName","isCardFlipped","flip","componentDidMount","fileName","substr","lastIndexOf","name","mapStateToProps","state","data","cards","isFlipped","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,0BAAP;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAGA,OAAO,MAAMC,QAAN,SAAuBT,SAAvB,CAAiC;AACpCU,EAAAA,MAAM,GAAE;AAEJ,QAAI,KAAKC,KAAL,CAAWC,MAAX,CAAkB,MAAlB,CAAJ,EAA8B;AAC1B;AACA;AAAC,aAAKD,KAAL,CAAWE,MAAX,CAAkBC,GAAlB,CAAsBC,GAAG,IAC1B,oBAAC,IAAD;AAAQ,UAAA,KAAK,EAAU;AAAK,YAAA,GAAG,EAAIA,GAAZ;AAAiB,YAAA,EAAE,EAAG,iBAAtB;AAAwC,YAAA,GAAG,EAAI,KAAKC,WAAL,CAAiB;AAACD,cAAAA;AAAD,aAAjB,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAvB;AACQ,UAAA,IAAI,EAAW,oBAAC,SAAD;AAAW,YAAA,MAAM,EAAI,KAAKJ,KAAL,CAAWC,MAAX,CAAkB,KAAKI,WAAL,CAAiBD,GAAjB,CAAlB,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADvB;AAEQ,UAAA,SAAS,EAAM,KAAMJ,KAAN,CAAYM,aAFnC;AAGQ,UAAA,IAAI,EAAW,KAAKC,IAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADC;AAIqC;AAAA;AACzC,KAPD,MAOO;AACH,aAAO,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;AACJ;;AAEDA,EAAAA,IAAI,GAAE;AACF,SAAKP,KAAL,CAAWN,QAAX;AACH;;AAEDc,EAAAA,iBAAiB,GAAE;AACf,SAAKR,KAAL,CAAWR,WAAX,CAAuB,6FAAvB,EACA,4FADA;AAEA,SAAKQ,KAAL,CAAWP,SAAX;AACH;;AAEDY,EAAAA,WAAW,CAACD,GAAD,EAAK;AACZ,QAAIK,QAAQ,GAAGL,GAAG,CAACM,MAAJ,CAAWN,GAAG,CAACO,WAAJ,CAAgB,GAAhB,IAAuB,CAAlC,CAAf;AACA,QAAIC,IAAI,GAAGH,QAAQ,CAACC,MAAT,CAAgB,CAAhB,EAAmBD,QAAQ,CAACE,WAAT,CAAqB,GAArB,CAAnB,CAAX;AACA,WAAOC,IAAP;AACH;;AA7BmC;;AAiCxC,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9Bb,EAAAA,MAAM,EAAUa,KAAK,CAACb,MAAN,CAAac,IADC;AAE9Bb,EAAAA,MAAM,EAAUY,KAAK,CAACZ,MAAN,CAAaa,IAFC;AAG9BT,EAAAA,aAAa,EAAGQ,KAAK,CAACE,KAAN,CAAYC;AAHE,CAAL,CAA7B;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,IAC/B7B,kBAAkB,CACd;AACIE,EAAAA,WADJ;AAEIC,EAAAA,SAFJ;AAGIC,EAAAA;AAHJ,CADc,EAMdyB,QANc,CADtB;;AAUA,eAAe5B,OAAO,CAACsB,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CpB,QAA7C,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport '../stylesheets/style.css';\r\nimport { fetchQuotes } from '../actions/index';\r\nimport { getImages } from '../actions/index';\r\nimport { flipCard } from '../actions/index';\r\nimport QuoteCard from './QuoteCard';\r\nimport LoadingScreen from './LoadingScreen';\r\nimport Card from './Card';\r\n\r\n\r\nexport class CardMenu extends Component {\r\n    render(){\r\n  \r\n        if (this.props.quotes['Andy']){\r\n            return   \r\n            {this.props.images.map(url => \r\n            <Card   front       = {<img src = {url} id = 'characterImages' alt = {this.extractName({url})} />} \r\n                    back        = {<QuoteCard quotes = {this.props.quotes[this.extractName(url)]} />}\r\n                    isFlipped   = {this. props.isCardFlipped} \r\n                    flip        = {this.flip} />)};\r\n        } else {\r\n            return <LoadingScreen />;\r\n        }\r\n    }\r\n\r\n    flip(){\r\n        this.props.flipCard();\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.fetchQuotes('https://raw.githubusercontent.com/anderskristo/the-office-quotes/master/src/quotes/all.json', \r\n        'https://raw.githubusercontent.com/yoscheherazade/the-office-quotes-json/master/quotes.json');\r\n        this.props.getImages();\r\n    }\r\n    \r\n    extractName(url){\r\n        let fileName = url.substr(url.lastIndexOf('/') + 1);\r\n        let name = fileName.substr(0, fileName.lastIndexOf('.'));\r\n        return name;\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    quotes:         state.quotes.data,\r\n    images:         state.images.data,\r\n    isCardFlipped:  state.cards.isFlipped\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => \r\n    bindActionCreators(\r\n        {\r\n            fetchQuotes,\r\n            getImages,\r\n            flipCard\r\n        },\r\n        dispatch\r\n    );\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardMenu);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elija\\\\Projects\\\\quote-generator\\\\random-quote-generator\\\\src\\\\components\\\\CharacterCard.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactCardFlip from 'react-card-flip';\nimport '../stylesheets/style.css';\nexport default class CharacterCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFlipped: false,\n      isHovered: false,\n      url: props.image,\n      name: props.name,\n      quotes: props.quotes,\n      quote: \"\",\n      self: null\n    };\n    this.setState(prevState => {\n      quote: prevState.quotes[Math.floor(Math.random() * prevState.quotes.length)];\n    });\n    this.handleClick = this.handleClick.bind(this);\n    this.handleHover = this.handleHover.bind(this);\n    this.getStyle = this.getStyle.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    this.setState(prevState => ({\n      isFlipped: !prevState.isFlipped,\n      self: ReactDOM.findDOMNode(this).getBoundingClientRect()\n    }));\n  }\n\n  handleHover() {\n    this.setState(prevState => ({\n      isHovered: !prevState.isHovered\n    }));\n  }\n\n  getStyle() {\n    if (this.state.isFlipped) {\n      return {\n        transition: 'transform .2s',\n        transform: `translateX(calc(39vw - (${this.state.self.left}px))) translateY(calc(41vh - (${this.state.self.top}px))) scale(3)`\n      };\n    } else if (this.state.isHovered) {\n      return {\n        transition: 'transform .2s',\n        transform: 'scale(1.2)',\n        zIndex: '1'\n      };\n    } else {\n      return {\n        transition: 'transform .2s',\n        transform: 'scale(1)'\n      };\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      onClick: this.handleClick,\n      style: this.getStyle(),\n      onMouseEnter: this.handleHover,\n      onMouseLeave: this.handleHover,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(ReactCardFlip, {\n      isFlipped: this.state.isFlipped,\n      flipDirection: \"horizontal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      key: \"front\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: this.state.name,\n      src: this.state.url,\n      id: \"characterImage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"back\",\n      key: \"back\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.state.quote))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Elija/Projects/quote-generator/random-quote-generator/src/components/CharacterCard.js"],"names":["React","Component","ReactDOM","ReactCardFlip","CharacterCard","constructor","props","state","isFlipped","isHovered","url","image","name","quotes","quote","self","setState","prevState","Math","floor","random","length","handleClick","bind","handleHover","getStyle","e","preventDefault","findDOMNode","getBoundingClientRect","transition","transform","left","top","zIndex","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactCardFlip from 'react-card-flip';\r\nimport '../stylesheets/style.css';\r\n\r\nexport default class CharacterCard extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isFlipped: false,\r\n            isHovered: false,\r\n            url: props.image,\r\n            name: props.name,\r\n            quotes: props.quotes,\r\n            quote: \"\",\r\n            self: null\r\n        };\r\n        this.setState(prevState => {\r\n            quote: prevState.quotes[Math.floor(Math.random() * prevState.quotes.length)]\r\n        });\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleHover = this.handleHover.bind(this);\r\n        this.getStyle = this.getStyle.bind(this);\r\n    }\r\n\r\n    handleClick(e) {\r\n        e.preventDefault();\r\n        this.setState(prevState => (\r\n            { isFlipped: !prevState.isFlipped, \r\n            self: ReactDOM.findDOMNode(this).getBoundingClientRect()}\r\n        ));\r\n    }    \r\n\r\n    handleHover(){\r\n        this.setState(prevState => ({\r\n            isHovered: !prevState.isHovered\r\n        }));\r\n    }\r\n    \r\n    getStyle(){\r\n        if (this.state.isFlipped){\r\n            return {\r\n                transition: 'transform .2s',\r\n                transform: `translateX(calc(39vw - (${this.state.self.left}px))) translateY(calc(41vh - (${this.state.self.top}px))) scale(3)`\r\n            }\r\n        } else if (this.state.isHovered) {\r\n            return {\r\n                transition: 'transform .2s',\r\n                transform: 'scale(1.2)',\r\n                zIndex: '1'\r\n            }\r\n        } else {\r\n            return { \r\n                transition: 'transform .2s',\r\n                transform: 'scale(1)' \r\n            }\r\n        }\r\n    }\r\n\r\n    render(){    \r\n        return (\r\n            <div onClick = {this.handleClick} style={this.getStyle()} onMouseEnter={this.handleHover} onMouseLeave={this.handleHover}>\r\n                <ReactCardFlip  isFlipped={this.state.isFlipped} flipDirection=\"horizontal\">\r\n                    <div key='front'>\r\n                        <img alt={this.state.name} src={this.state.url} id='characterImage'></img>\r\n                    </div>\r\n                    <div id='back' key='back'>\r\n                        <h1>{this.state.quote}</h1>\r\n                    </div>\r\n                </ReactCardFlip>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}
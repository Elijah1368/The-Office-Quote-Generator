{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Elija\\\\Projects\\\\quote-generator\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nconst emptyQuotes = {\n  current: \"\",\n  quotes: []\n};\nconst initialState = {\n  quotes: {\n    Andy: {\n      emptyQuotes\n    },\n    Michael: {\n      emptyQuotes\n    },\n    Stanley: {\n      emptyQuotes\n    },\n    Kelly: {\n      emptyQuotes\n    },\n    Dwight: {\n      emptyQuotes\n    },\n    Pam: {\n      emptyQuotes\n    },\n    Jim: {\n      emptyQuotes\n    },\n    Angela: {\n      emptyQuotes\n    }\n  }\n};\nexport default function (state = initialState, action) {\n  if (!action.hasOwnProperty('payload') || !action) {\n    action = {\n      payload: {}\n    };\n  }\n\n  switch (action.type) {\n    case 'FETCH_QUOTES':\n      return Object.assign({}, action.payload);\n\n    case 'NEW_QUOTE':\n      let newState = _objectSpread({}, state);\n\n      newState.quotes[action.payload].current = newState.quotes[action.payload].quotes[Math.floor(Math.random() * newState.quotes[action.payload].quotes.length)];\n      return newState;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Elija/Projects/quote-generator/src/reducers/quoteReducer.js"],"names":["emptyQuotes","current","quotes","initialState","Andy","Michael","Stanley","Kelly","Dwight","Pam","Jim","Angela","state","action","hasOwnProperty","payload","type","Object","assign","newState","Math","floor","random","length"],"mappings":";AACA,MAAMA,WAAW,GAAG;AAACC,EAAAA,OAAO,EAAE,EAAV;AAAcC,EAAAA,MAAM,EAAC;AAArB,CAApB;AACA,MAAMC,YAAY,GAAG;AACjBD,EAAAA,MAAM,EAAE;AACJE,IAAAA,IAAI,EAAI;AAACJ,MAAAA;AAAD,KADJ;AAEJK,IAAAA,OAAO,EAAC;AAACL,MAAAA;AAAD,KAFJ;AAGJM,IAAAA,OAAO,EAAC;AAACN,MAAAA;AAAD,KAHJ;AAIJO,IAAAA,KAAK,EAAG;AAACP,MAAAA;AAAD,KAJJ;AAKJQ,IAAAA,MAAM,EAAE;AAACR,MAAAA;AAAD,KALJ;AAMJS,IAAAA,GAAG,EAAK;AAACT,MAAAA;AAAD,KANJ;AAOJU,IAAAA,GAAG,EAAK;AAACV,MAAAA;AAAD,KAPJ;AAQJW,IAAAA,MAAM,EAAE;AAACX,MAAAA;AAAD;AARJ;AADS,CAArB;AAcA,eAAe,UAAUY,KAAK,GAAGT,YAAlB,EAAgCU,MAAhC,EAAuC;AAElD,MAAI,CAACA,MAAM,CAACC,cAAP,CAAsB,SAAtB,CAAD,IAAqC,CAACD,MAA1C,EAAiD;AAC7CA,IAAAA,MAAM,GAAG;AAACE,MAAAA,OAAO,EAAC;AAAT,KAAT;AACH;;AACD,UAAQF,MAAM,CAACG,IAAf;AACI,SAAK,cAAL;AACI,aAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,MAAM,CAACE,OAAzB,CAAP;;AACJ,SAAK,WAAL;AACI,UAAII,QAAQ,qBAAOP,KAAP,CAAZ;;AACAO,MAAAA,QAAQ,CAACjB,MAAT,CAAgBW,MAAM,CAACE,OAAvB,EAAgCd,OAAhC,GAA0CkB,QAAQ,CAACjB,MAAT,CAAgBW,MAAM,CAACE,OAAvB,EAAgCb,MAAhC,CAAuCkB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBH,QAAQ,CAACjB,MAAT,CAAgBW,MAAM,CAACE,OAAvB,EAAgCb,MAAhC,CAAuCqB,MAAlE,CAAvC,CAA1C;AACA,aAAOJ,QAAP;;AACJ;AACI,aAAOP,KAAP;AARR;AAUH","sourcesContent":["\r\nconst emptyQuotes = {current: \"\", quotes:[]}\r\nconst initialState = {\r\n    quotes: {\r\n        Andy:   {emptyQuotes},\r\n        Michael:{emptyQuotes},\r\n        Stanley:{emptyQuotes},\r\n        Kelly:  {emptyQuotes},\r\n        Dwight: {emptyQuotes},\r\n        Pam:    {emptyQuotes},\r\n        Jim:    {emptyQuotes},\r\n        Angela: {emptyQuotes}\r\n    }\r\n};\r\n\r\n  \r\nexport default function (state = initialState, action){\r\n\r\n    if (!action.hasOwnProperty('payload') || !action){\r\n        action = {payload:{}};\r\n    } \r\n    switch (action.type){\r\n        case 'FETCH_QUOTES':\r\n            return Object.assign({}, action.payload);\r\n        case 'NEW_QUOTE':\r\n            let newState = {...state};\r\n            newState.quotes[action.payload].current = newState.quotes[action.payload].quotes[Math.floor(Math.random() * newState.quotes[action.payload].quotes.length)];\r\n            return newState;\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
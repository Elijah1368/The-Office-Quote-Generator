{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elija\\\\Projects\\\\quote-generator\\\\random-quote-generator\\\\src\\\\components\\\\QuoteGenerator.js\";\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport '../stylesheets/style.css';\nimport { fetchQuotes, newQuote } from '../actions/index';\nimport LoadingScreen from './LoadingScreen';\nimport CharacterCard from './CharacterCard';\n/*\r\nimport Andy from '../assets/Andy.png';\r\nimport Angela from '../assets/Angela.png';\r\nimport Dwight from '../assets/Dwight.png';\r\nimport Jim from '../assets/Jim.png';\r\nimport Kelly from '../assets/Kelly.png';\r\nimport Michael from '../assets/Michael.png';\r\nimport Pam from '../assets/Pam.png';\r\nimport Stanley from '../assets/Stanley.png';\r\n*/\n\nexport class QuoteGenerator extends Component {\n  componentDidMount() {\n    this.props.fetchQuotes('https://raw.githubusercontent.com/anderskristo/the-office-quotes/master/src/quotes/all.json', 'https://raw.githubusercontent.com/yoscheherazade/the-office-quotes-json/master/quotes.json');\n  }\n\n  render() {\n    if (this.props.quotes) {\n      console.log(this.props.quotes['Andy Bernard']);\n      return (\n        /*\r\n        <div className= 'wrapper'>\r\n            <div className='grid'>\r\n                <CharacterCard name=\"Andy\" image={Andy} />\r\n                <CharacterCard name=\"Angela\" image={Angela}/>\r\n                <CharacterCard name=\"Dwight\" image={Dwight}/>\r\n                <CharacterCard name=\"Jim\" image={Jim}/>\r\n                <CharacterCard name=\"Kelly\" image={Kelly}/>\r\n                <CharacterCard name=\"Michael\" image={Michael}/>\r\n                <CharacterCard name=\"Pam\" image={Pam}/>\r\n                <CharacterCard name=\"Stanley\" image={Stanley}/>\r\n                </div> \r\n        </div>);\r\n        */\n        React.createElement(\"div\", {\n          className: \"wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"grid\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(CharacterCard, {\n          name: \"Andy\",\n          quotes: this.props.quotes['Andy Bernard'],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }), React.createElement(CharacterCard, {\n          name: \"Angela\",\n          quotes: this.props.quotes['Angela Martin'],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }), React.createElement(CharacterCard, {\n          name: \"Dwight\",\n          quotes: this.props.quotes['Dwight Schrute'],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }), React.createElement(CharacterCard, {\n          name: \"Jim\",\n          quotes: this.props.quotes['Jim Halpert'],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }), React.createElement(CharacterCard, {\n          name: \"Kelly\",\n          quotes: this.props.quotes['Kelly Kapoor'],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }), React.createElement(CharacterCard, {\n          name: \"Michael\",\n          quotes: this.props.quotes['Michael Scott'],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }), React.createElement(CharacterCard, {\n          name: \"Pam\",\n          quotes: this.props.quotes['Pam Beesley'],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }), React.createElement(CharacterCard, {\n          name: \"Stanley\",\n          quotes: this.props.quotes['Stanley Hudson'],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        })))\n      );\n    } else {\n      return React.createElement(LoadingScreen, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  quotes: state.quotes.data,\n  randomNumber: state.quotes.randomNumber,\n  loading: state.quotes.loading,\n  character: state.quotes.character\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchQuotes,\n  newQuote\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuoteGenerator);","map":{"version":3,"sources":["C:/Users/Elija/Projects/quote-generator/random-quote-generator/src/components/QuoteGenerator.js"],"names":["React","Component","bindActionCreators","connect","fetchQuotes","newQuote","LoadingScreen","CharacterCard","QuoteGenerator","componentDidMount","props","render","quotes","console","log","mapStateToProps","state","data","randomNumber","loading","character","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport '../stylesheets/style.css';\r\nimport { fetchQuotes, newQuote } from '../actions/index';\r\nimport LoadingScreen from './LoadingScreen';\r\nimport CharacterCard from './CharacterCard';\r\n/*\r\nimport Andy from '../assets/Andy.png';\r\nimport Angela from '../assets/Angela.png';\r\nimport Dwight from '../assets/Dwight.png';\r\nimport Jim from '../assets/Jim.png';\r\nimport Kelly from '../assets/Kelly.png';\r\nimport Michael from '../assets/Michael.png';\r\nimport Pam from '../assets/Pam.png';\r\nimport Stanley from '../assets/Stanley.png';\r\n*/\r\n\r\nexport class QuoteGenerator extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.fetchQuotes('https://raw.githubusercontent.com/anderskristo/the-office-quotes/master/src/quotes/all.json', \r\n        'https://raw.githubusercontent.com/yoscheherazade/the-office-quotes-json/master/quotes.json');\r\n    }\r\n\r\n\r\n    render(){\r\n        if (this.props.quotes){\r\n            console.log(this.props.quotes['Andy Bernard']);\r\n            return (\r\n            /*\r\n            <div className= 'wrapper'>\r\n                <div className='grid'>\r\n                    <CharacterCard name=\"Andy\" image={Andy} />\r\n                    <CharacterCard name=\"Angela\" image={Angela}/>\r\n                    <CharacterCard name=\"Dwight\" image={Dwight}/>\r\n                    <CharacterCard name=\"Jim\" image={Jim}/>\r\n                    <CharacterCard name=\"Kelly\" image={Kelly}/>\r\n                    <CharacterCard name=\"Michael\" image={Michael}/>\r\n                    <CharacterCard name=\"Pam\" image={Pam}/>\r\n                    <CharacterCard name=\"Stanley\" image={Stanley}/>\r\n                    </div> \r\n            </div>);\r\n            */\r\n            <div className= 'wrapper'>\r\n                <div className='grid'>\r\n                    <CharacterCard name=\"Andy\" quotes={this.props.quotes['Andy Bernard']}/>\r\n                    <CharacterCard name=\"Angela\" quotes={this.props.quotes['Angela Martin']}/>\r\n                    <CharacterCard name=\"Dwight\" quotes={this.props.quotes['Dwight Schrute']}/>\r\n                    <CharacterCard name=\"Jim\" quotes={this.props.quotes['Jim Halpert']}/>          \r\n                    <CharacterCard name=\"Kelly\" quotes={this.props.quotes['Kelly Kapoor']}/>\r\n                    <CharacterCard name=\"Michael\" quotes={this.props.quotes['Michael Scott']}/>\r\n                    <CharacterCard name=\"Pam\" quotes={this.props.quotes['Pam Beesley']}/>          \r\n                    <CharacterCard name=\"Stanley\" quotes={this.props.quotes['Stanley Hudson']}/>\r\n            </div> \r\n            </div>);\r\n        } else {\r\n            return <LoadingScreen />;\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    quotes: state.quotes.data,\r\n    randomNumber: state.quotes.randomNumber,\r\n    loading: state.quotes.loading,\r\n    character: state.quotes.character\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => \r\n    bindActionCreators(\r\n        {\r\n            fetchQuotes,\r\n            newQuote,\r\n        },\r\n        dispatch\r\n    );\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuoteGenerator);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elija\\\\Projects\\\\quote-generator\\\\src\\\\components\\\\QuoteCard.js\";\nimport React, { Component } from 'react';\nimport '../stylesheets/loadingScreen.css';\nexport default class QuoteCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quotes: this.props.quotes,\n      current: \"\"\n    };\n    this.newQuote = this.newQuote.bind(this);\n  }\n\n  componentDidMount() {\n    this.newQuote();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"back\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"q\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, this.state.current), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"\",\n      className: \"button\",\n      id: \"tweet-quote\",\n      title: \"Tweet this quote!\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"TWEET\"), React.createElement(\"button\", {\n      className: \"button\",\n      id: \"new-quote\",\n      onClick: this.newQuote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"NEW QUOTE\")));\n  }\n\n  newQuote() {\n    let newQuote = this.state.quotes[Math.floor(Math.random() * this.state.quotes.length)];\n\n    while (newQuote === this.state.current) {\n      newQuote = this.state.quotes[Math.floor(Math.random() * this.state.quotes.length)];\n    }\n\n    this.setState(prevState => ({\n      current: newQuote\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Elija/Projects/quote-generator/src/components/QuoteCard.js"],"names":["React","Component","QuoteCard","constructor","props","state","quotes","current","newQuote","bind","componentDidMount","render","Math","floor","random","length","setState","prevState"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,kCAAP;AAGA,eAAe,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AAC7CE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,KAAKF,KAAL,CAAWE,MADV;AAETC,MAAAA,OAAO,EAAE;AAFA,KAAb;AAIA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf,SAAKF,QAAL;AACH;;AAEDG,EAAAA,MAAM,GAAE;AACJ,WACA;AAAK,MAAA,SAAS,EAAG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKN,KAAL,CAAWE,OADhB,CADJ,EAII;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACA,MAAA,IAAI,EAAC,EADL;AAEA,MAAA,SAAS,EAAC,QAFV;AAGA,MAAA,EAAE,EAAC,aAHH;AAIA,MAAA,KAAK,EAAC,mBAJN;AAKA,MAAA,MAAM,EAAC,QALP;AAMA,MAAA,GAAG,EAAC,qBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAWI;AACA,MAAA,SAAS,EAAC,QADV;AAEA,MAAA,EAAE,EAAC,WAFH;AAGA,MAAA,OAAO,EAAE,KAAKC,QAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAXJ,CAJJ,CADA;AAyBH;;AAEDA,EAAAA,QAAQ,GAAE;AACN,QAAIA,QAAQ,GAAG,KAAKH,KAAL,CAAWC,MAAX,CAAkBM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAAKT,KAAL,CAAWC,MAAX,CAAkBS,MAA7C,CAAlB,CAAf;;AACA,WAAOP,QAAQ,KAAK,KAAKH,KAAL,CAAWE,OAA/B,EAAuC;AACnCC,MAAAA,QAAQ,GAAG,KAAKH,KAAL,CAAWC,MAAX,CAAkBM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAAKT,KAAL,CAAWC,MAAX,CAAkBS,MAA7C,CAAlB,CAAX;AACH;;AACD,SAAKC,QAAL,CAAcC,SAAS,KAAK;AACxBV,MAAAA,OAAO,EAAEC;AADe,KAAL,CAAvB;AAGH;;AAlD4C","sourcesContent":["import React, {Component} from 'react';\r\nimport '../stylesheets/loadingScreen.css';\r\n\r\n\r\nexport default class QuoteCard extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            quotes: this.props.quotes,\r\n            current: \"\"\r\n        };\r\n        this.newQuote = this.newQuote.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.newQuote();\r\n    }\r\n\r\n    render(){\r\n        return ( \r\n        <div className = 'back'>\r\n            <q> \r\n                {this.state.current}\r\n            </q>\r\n            <div className=\"buttons\">\r\n                <a\r\n                href=\"\"\r\n                className=\"button\"\r\n                id=\"tweet-quote\"\r\n                title=\"Tweet this quote!\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                >\r\n                TWEET\r\n                </a>\r\n                <button\r\n                className=\"button\"\r\n                id=\"new-quote\"\r\n                onClick={this.newQuote}\r\n                >\r\n                NEW QUOTE\r\n                </button>\r\n            </div>\r\n        </div> );\r\n    }\r\n\r\n    newQuote(){\r\n        let newQuote = this.state.quotes[Math.floor(Math.random() * this.state.quotes.length)];\r\n        while (newQuote === this.state.current){\r\n            newQuote = this.state.quotes[Math.floor(Math.random() * this.state.quotes.length)];\r\n        }\r\n        this.setState(prevState => ({\r\n            current: newQuote\r\n        }));\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
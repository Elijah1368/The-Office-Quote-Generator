{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elija\\\\Projects\\\\quote-generator\\\\random-quote-generator\\\\src\\\\components\\\\CardMenu.js\";\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport '../stylesheets/style.css';\nimport { fetchQuotes } from '../actions/index';\nimport { getImages } from '../actions/index';\nimport { flipCard } from '../actions/index';\nimport QuoteCard from './QuoteCard';\nimport LoadingScreen from './LoadingScreen';\nimport ReactCardFlip from 'react-card-flip';\nexport class CardMenu extends Component {\n  render() {\n    if (this.props.quotes['Andy'] && this.props.images) {\n      return this.props.images.map(url => {\n        let name = this.extractName(url);\n        return React.createElement(React.Fragment, {\n          key: name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, React.createElement(ReactCardFlip, {\n          isFlipped: this.props.isCardFlipped,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          key: \"front\",\n          onClick: this.props.flip,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: url,\n          id: \"characterImages\",\n          alt: name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          key: \"back\",\n          onClick: this.props.flip,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, React.createElement(QuoteCard, {\n          quotes: this.props.quotes[name],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }))));\n      });\n    } else {\n      return React.createElement(LoadingScreen, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.props.fetchQuotes('https://raw.githubusercontent.com/anderskristo/the-office-quotes/master/src/quotes/all.json', 'https://raw.githubusercontent.com/yoscheherazade/the-office-quotes-json/master/quotes.json');\n    this.props.getImages();\n  }\n\n  extractName(url) {\n    let fileName = url.substr(url.lastIndexOf('/') + 1);\n    let name = fileName.substr(0, fileName.indexOf('.'));\n    return name;\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  quotes: state.quotes.data,\n  images: state.images.data,\n  isCardFlipped: state.cards.isFlipped\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchQuotes,\n  getImages,\n  flipCard\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardMenu);","map":{"version":3,"sources":["C:/Users/Elija/Projects/quote-generator/random-quote-generator/src/components/CardMenu.js"],"names":["React","Component","bindActionCreators","connect","fetchQuotes","getImages","flipCard","QuoteCard","LoadingScreen","ReactCardFlip","CardMenu","render","props","quotes","images","map","url","name","extractName","isCardFlipped","flip","componentDidMount","fileName","substr","lastIndexOf","indexOf","mapStateToProps","state","data","cards","isFlipped","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport '../stylesheets/style.css';\r\nimport { fetchQuotes } from '../actions/index';\r\nimport { getImages } from '../actions/index';\r\nimport { flipCard } from '../actions/index';\r\nimport QuoteCard from './QuoteCard';\r\nimport LoadingScreen from './LoadingScreen';\r\nimport ReactCardFlip from 'react-card-flip';\r\n\r\n\r\nexport class CardMenu extends Component {\r\n    render(){\r\n        if (this.props.quotes['Andy'] && this.props.images){\r\n            return (\r\n            this.props.images.map(url => {\r\n                let name = this.extractName(url);\r\n                return (  \r\n                     <React.Fragment key = {name}>\r\n                        <ReactCardFlip isFlipped = {this.props.isCardFlipped}>\r\n                            <div key='front' onClick = {this.props.flip}>\r\n                                <img src = {url} id = 'characterImages' alt = {name} />\r\n                            </div>\r\n                            <div key='back' onClick = {this.props.flip}>\r\n                                <QuoteCard quotes = {this.props.quotes[name]} />\r\n                            </div>\r\n                        </ReactCardFlip>\r\n                    </React.Fragment> );\r\n                }\r\n            ));\r\n        } else {\r\n            return <LoadingScreen />;\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.props.fetchQuotes('https://raw.githubusercontent.com/anderskristo/the-office-quotes/master/src/quotes/all.json', \r\n        'https://raw.githubusercontent.com/yoscheherazade/the-office-quotes-json/master/quotes.json');\r\n        this.props.getImages();\r\n    }\r\n    \r\n    extractName(url){\r\n        let fileName = url.substr(url.lastIndexOf('/') + 1);\r\n        let name = fileName.substr(0, fileName.indexOf('.'));\r\n        return name;\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    quotes:         state.quotes.data,\r\n    images:         state.images.data,\r\n    isCardFlipped:  state.cards.isFlipped\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => \r\n    bindActionCreators(\r\n        {\r\n            fetchQuotes,\r\n            getImages,\r\n            flipCard\r\n        },\r\n        dispatch\r\n    );\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardMenu);"]},"metadata":{},"sourceType":"module"}